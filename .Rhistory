output<-list(max(nchar(y$original_hm)),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
[nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
!=max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))])])
)
)
list_fourcountries<-as.data.frame(list_fourcountries)
colnames(list_fourcountries)<-c('GBR1','GBR2','GBR3','IND1','IND2','IND3',
'USA1','USA2','USA3','VEN1','VEN2','VEN3')
list_fourcountries<-data.frame(t(list_fourcountries))
list_fourcountries<-cbind(countries = rownames(list_fourcountries), list_fourcountries)
list_fourcountries
row.names(list_fourcountries)
rownames(list_fourcountries)<-c()
list_fourcountries
colnames(list_fourcountries)<-c('Countries','Top 3')
list_fourcountries
colnames(list_fourcountries)<-c('Countries','Top_3')
list_fourcountries
ggplot(data=list_fourcountries, aes(x = Countries, y= Top_3, fill = Countries)) +
geom_bar(stat="identity")+
scale_colour_gradient2()+
coord_flip()
colnames(list_fourcountries)<-c('Country_rank','Value')
list_fourcountries
ggplot(data=list_fourcountries, aes(x = Country_rank, y= Value, fill = Country_rank)) +
geom_bar(stat="identity")+
scale_colour_gradient2()+
coord_flip()
GBR1<-four_countries[which(nchar(four_countries$original_hm)==1233 & four_countries$country=='GBR'),]
GBR2<-four_countries[which(nchar(four_countries$original_hm)==410 & four_countries$country=='GBR'),]
GBR3<-four_countries[which(nchar(four_countries$original_hm)==318 & four_countries$country=='GBR'),]
IND1<-four_countries[which(nchar(four_countries$original_hm)==6550 & four_countries$country=='IND'),]
IND2<-four_countries[which(nchar(four_countries$original_hm)==6532 & four_countries$country=='IND'),]
IND3<-four_countries[which(nchar(four_countries$original_hm)==5348 & four_countries$country=='IND'),]
USA1<-four_countries[which(nchar(four_countries$original_hm)==6557 & four_countries$country=='USA'),]
USA2<-four_countries[which(nchar(four_countries$original_hm)==2882 & four_countries$country=='USA'),]
USA3<-four_countries[which(nchar(four_countries$original_hm)==2274 & four_countries$country=='USA'),]
VEN1<-four_countries[which(nchar(four_countries$original_hm)==766 & four_countries$country=='VEN'),]
VEN2<-four_countries[which(nchar(four_countries$original_hm)==727 & four_countries$country=='VEN'),]
VEN3<-four_countries[which(nchar(four_countries$original_hm)==606 & four_countries$country=='VEN'),]
rbind(GBR1,GBR2)
rbind(GBR1,GBR2,GBR3,IND1,IND2,IND3,USA1,USA2,USA3,VEN1,VEN2,VEN3)
sentence_fourcountries<-rbind(GBR1,GBR2,GBR3,IND1,IND2,IND3,USA1,USA2,USA3,VEN1,VEN2,VEN3)
class(sentence_fourcountries)
sentence_fourcountries
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
library(ggplot2)
library(reshape2)
library(lemon)
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(gender %in% c("m", "f")) %>%
filter(marital %in% c("single", "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period,
months_3 = "3m", hours_24 = "24h"))
datatable(hm_data)
bag_of_words <-  hm_data %>%
unnest_tokens(word, text)
word_count <- bag_of_words %>%
count(word, sort = TRUE)
ui <- navbarPage("What makes people happy?",
tabPanel("Overview",
titlePanel(h1("Most Frequent Occurrences",
align = "center")),
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "topWordcloud",
label = "Number of terms for word cloud:",
min = 5,
max = 100,
value = 50)
),
mainPanel(
wordcloud2Output(outputId = "WC")
)
)
)
)
server <- function(input, output, session) {
output$WC <- renderWordcloud2({
word_count %>%
slice(1:input$topWordcloud) %>%
wordcloud2(size = 0.6,
rotateRatio = 0)
})
}
mycountry<-as.data.frame(table(hm_data$country))
mycountryupdated<-mycountry[order(mycountry$Freq, decreasing = T),]
mycountrytop10<-mycountryupdated[1:10,]
colnames(mycountrytop10) <- c("Country", "Count")
Countrylist<-c("USA", "India", "Venezuela", "Canada", "UK", "Philippines", "Vietnam", "Brazil",
"Mexico", "Australia")
cbind(Countrylist,mycountrytop10)
table(hm_data$gender)
table(hm_data$marital)
agesub<-na.omit(as.numeric(hm_data$age[which(as.numeric(hm_data$age)<120)]))
hist(agesub, main = 'Histogram of Age', xlab='Age',col="pink")
median(agesub)
mean(agesub)
mytext<-as.data.frame(hm_data)[hm_data$country %in% mycountrytop10$Country,]
textcount<-nchar(mytext$original_hm)
textcountry<-mytext$country
textdataframe<-data.frame(textcountry,textcount)
ggplot(data = textdataframe, aes(x = textcount)) +
geom_histogram(color="darkblue", fill="lightblue") +
facet_wrap(~ textcountry, scales="free",nrow = 4)
mean_of_text<-setNames(aggregate(textdataframe[, 2], list(textdataframe$textcountry), mean),c("Countries","Mean"))
mean_of_text
ggplot(mean_of_text, aes(x=Countries, y=Mean, color=Countries)) +
geom_point()
quantile_of_text<-aggregate(textdataframe[, 2], list(textdataframe$textcountry), quantile)
colnames(quantile_of_text)<-c("Countries","length")
quantile_of_text$length<-round(quantile_of_text$length)
quantile_of_text
s<-
"Countries length.0% length.25% length.50% length.75% length.100%
AUS        13         41         56         93         297
BRA        19         38         50         73         199
CAN        16         42         60         86         497
GBR        15         42         70        101        1233
IND        11         41         79        151        6550
MEX        15         43         60         90         267
PHL        16         44         62         92         427
USA         6         46         67         98        6557
VEN        11         49         74        111         766
VNM        15         31         46         63         336
"
d1 <- read.delim(textConnection(s), sep="")
d1 <- melt(d1, id.vars="Countries")
ggplot(d1, aes(Countries,value, col=variable)) +
geom_point() +
stat_smooth()
d2<- read.table(text = s, header = T)
d2 %>% tidyr::gather("id", "value", 2:6) %>%
ggplot(., aes(Countries, value))+
geom_point( color="purple")+
geom_smooth(method = "lm", se=FALSE)+
facet_wrap(~id,scales="free", nrow=3)
four_countries<-as.data.frame(hm_data)[hm_data$country %in% c('USA','IND','VEN','GBR'),]
split<-split(four_countries, four_countries$country)
list_fourcountries<-lapply(split, function(y)
output<-list(max(nchar(y$original_hm)),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
[nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
!=max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))])])
)
)
list_fourcountries<-as.data.frame(list_fourcountries)
colnames(list_fourcountries)<-c('GBR1','GBR2','GBR3','IND1','IND2','IND3',
'USA1','USA2','USA3','VEN1','VEN2','VEN3')
list_fourcountries<-data.frame(t(list_fourcountries))
list_fourcountries<-cbind(countries = rownames(list_fourcountries), list_fourcountries)
rownames(list_fourcountries)<-c()
colnames(list_fourcountries)<-c('Country_rank','Value')
list_fourcountries
ggplot(data=list_fourcountries, aes(x = Country_rank, y= Value, fill = Country_rank)) +
geom_bar(stat="identity")+
scale_colour_gradient2()+
coord_flip()
GBR1<-four_countries[which(nchar(four_countries$original_hm)==1233
& four_countries$country=='GBR'),]
GBR2<-four_countries[which(nchar(four_countries$original_hm)==410
& four_countries$country=='GBR'),]
GBR3<-four_countries[which(nchar(four_countries$original_hm)==318
& four_countries$country=='GBR'),]
IND1<-four_countries[which(nchar(four_countries$original_hm)==6550
& four_countries$country=='IND'),]
IND2<-four_countries[which(nchar(four_countries$original_hm)==6532
& four_countries$country=='IND'),]
IND3<-four_countries[which(nchar(four_countries$original_hm)==5348
& four_countries$country=='IND'),]
USA1<-four_countries[which(nchar(four_countries$original_hm)==6557
& four_countries$country=='USA'),]
USA2<-four_countries[which(nchar(four_countries$original_hm)==2882
& four_countries$country=='USA'),]
USA3<-four_countries[which(nchar(four_countries$original_hm)==2274
& four_countries$country=='USA'),]
VEN1<-four_countries[which(nchar(four_countries$original_hm)==766
& four_countries$country=='VEN'),]
VEN2<-four_countries[which(nchar(four_countries$original_hm)==727
& four_countries$country=='VEN'),]
VEN3<-four_countries[which(nchar(four_countries$original_hm)==606
& four_countries$country=='VEN'),]
sentence_fourcountries<-rbind(GBR1,GBR2,GBR3,IND1,IND2,IND3,USA1,USA2,USA3,VEN1,VEN2,VEN3)
sentence_fourcountries
sentence_fourcountries
GBR1
GBR1
GBR2
GBR2
GBR3
IND1
IND2
IND3
USA1
USA1
USA1
USA1
IND3
USA1
USA1
IND1
USA2
USA3
VEN1
VEN1
VEN2
VEN3
four_countries<-as.data.frame(hm_data)[hm_data$country %in% c('USA','IND','VEN','GBR'),]
split<-split(four_countries, four_countries$country)
list_fourcountries<-lapply(split, function(y)
output<-list(max(nchar(y$original_hm)),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
[nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
!=max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))])])
)
)
list_fourcountries<-as.data.frame(list_fourcountries)
colnames(list_fourcountries)<-c('GBR1','GBR2','GBR3','IND1','IND2','IND3',
'USA1','USA2','USA3','VEN1','VEN2','VEN3')
list_fourcountries<-data.frame(t(list_fourcountries))
list_fourcountries<-cbind(countries = rownames(list_fourcountries), list_fourcountries)
rownames(list_fourcountries)<-c()
colnames(list_fourcountries)<-c('Country_rank_max','Value')
list_fourcountries
ggplot(data=list_fourcountries, aes(x = Country_rank_max, y= Value, fill = Country_rank)) +
geom_bar(stat="identity")+
scale_colour_gradient2()+
coord_flip()
four_countries<-as.data.frame(hm_data)[hm_data$country %in% c('USA','IND','VEN','GBR'),]
split<-split(four_countries, four_countries$country)
list_fourcountries<-lapply(split, function(y)
output<-list(max(nchar(y$original_hm)),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]),
max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
[nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))]
!=max(nchar(y$original_hm)[nchar(y$original_hm)!=max(nchar(y$original_hm))])])
)
)
list_fourcountries<-as.data.frame(list_fourcountries)
colnames(list_fourcountries)<-c('GBR1','GBR2','GBR3','IND1','IND2','IND3',
'USA1','USA2','USA3','VEN1','VEN2','VEN3')
list_fourcountries<-data.frame(t(list_fourcountries))
list_fourcountries<-cbind(countries = rownames(list_fourcountries), list_fourcountries)
rownames(list_fourcountries)<-c()
colnames(list_fourcountries)<-c('Country_rank_max','Value')
list_fourcountries
ggplot(data=list_fourcountries, aes(x = Country_rank_max, y= Value, fill = Country_rank_max)) +
geom_bar(stat="identity")+
scale_colour_gradient2()+
coord_flip()
GBR1<-four_countries[which(nchar(four_countries$original_hm)==1233
& four_countries$country=='GBR'),]
GBR2<-four_countries[which(nchar(four_countries$original_hm)==410
& four_countries$country=='GBR'),]
GBR3<-four_countries[which(nchar(four_countries$original_hm)==318
& four_countries$country=='GBR'),]
IND1<-four_countries[which(nchar(four_countries$original_hm)==6550
& four_countries$country=='IND'),]
IND2<-four_countries[which(nchar(four_countries$original_hm)==6532
& four_countries$country=='IND'),]
IND3<-four_countries[which(nchar(four_countries$original_hm)==5348
& four_countries$country=='IND'),]
USA1<-four_countries[which(nchar(four_countries$original_hm)==6557
& four_countries$country=='USA'),]
USA2<-four_countries[which(nchar(four_countries$original_hm)==2882
& four_countries$country=='USA'),]
USA3<-four_countries[which(nchar(four_countries$original_hm)==2274
& four_countries$country=='USA'),]
VEN1<-four_countries[which(nchar(four_countries$original_hm)==766
& four_countries$country=='VEN'),]
VEN2<-four_countries[which(nchar(four_countries$original_hm)==727
& four_countries$country=='VEN'),]
VEN3<-four_countries[which(nchar(four_countries$original_hm)==606
& four_countries$country=='VEN'),]
sentence_fourcountries<-rbind(GBR1,GBR2,GBR3,IND1,IND2,IND3,USA1,USA2,USA3,VEN1,VEN2,VEN3)
sentence_fourcountries
list_fourcountries2<-lapply(split, function(y)
output2<-list(min(nchar(y$original_hm)),
min(nchar(y$original_hm)[nchar(y$original_hm)!=min(nchar(y$original_hm))]),
min(nchar(y$original_hm)[nchar(y$original_hm)!=min(nchar(y$original_hm))]
[nchar(y$original_hm)[nchar(y$original_hm)!=min(nchar(y$original_hm))]
!=min(nchar(y$original_hm)[nchar(y$original_hm)!=min(nchar(y$original_hm))])])
)
)
list_fourcountries2<-as.data.frame(list_fourcountries2)
colnames(list_fourcountries2)<-c('GBR1','GBR2','GBR3','IND1','IND2','IND3',
'USA1','USA2','USA3','VEN1','VEN2','VEN3')
list_fourcountries2<-data.frame(t(list_fourcountries2))
list_fourcountries2<-cbind(countries = rownames(list_fourcountries2), list_fourcountries2)
rownames(list_fourcountries2)<-c()
colnames(list_fourcountries2)<-c('Country_rank_min','Value')
list_fourcountries2
ggplot(data=list_fourcountries2, aes(x = Country_rank_min, y= Value, fill = Country_rank_min)) +
geom_bar(stat="identity")+
scale_colour_gradient2()+
coord_flip()
list_fourcountries
sentence_fourcountries
list_fourcountries2
GBR1_2<-four_countries[which(nchar(four_countries$original_hm)==15
& four_countries$country=='GBR'),]
GBR2_2<-four_countries[which(nchar(four_countries$original_hm)==19
& four_countries$country=='GBR'),]
GBR3_2<-four_countries[which(nchar(four_countries$original_hm)==21
& four_countries$country=='GBR'),]
IND1_2<-four_countries[which(nchar(four_countries$original_hm)==11
& four_countries$country=='IND'),]
IND2_2<-four_countries[which(nchar(four_countries$original_hm)==12
& four_countries$country=='IND'),]
IND3_2<-four_countries[which(nchar(four_countries$original_hm)==13
& four_countries$country=='IND'),]
USA1_2<-four_countries[which(nchar(four_countries$original_hm)==6
& four_countries$country=='USA'),]
USA2_2<-four_countries[which(nchar(four_countries$original_hm)==7
& four_countries$country=='USA'),]
USA3_2<-four_countries[which(nchar(four_countries$original_hm)==8
& four_countries$country=='USA'),]
VEN1_2<-four_countries[which(nchar(four_countries$original_hm)==11
& four_countries$country=='VEN'),]
VEN2_2<-four_countries[which(nchar(four_countries$original_hm)==14
& four_countries$country=='VEN'),]
VEN3_2<-four_countries[which(nchar(four_countries$original_hm)==15
& four_countries$country=='VEN'),]
sentence_fourcountries2<-rbind(GBR1_2,GBR2_2,GBR3_2,IND1_2,IND2_2,IND3_2,USA1_2,USA2_2,USA3_2,VEN1_2,VEN2_2,VEN3_2)
sentence_fourcountries2
nrow(sentence_fourcountries2)
split2<-split(sentence_fourcountries2, sentence_fourcountries2$reflection_period)
split2
length(split2)
rapply(split2, length, how = "list")
rapply(split2, length), how = "list")
rapply(split2, length)
rapply(split2, length, how = "list")[1]
rapply(split2, length, how = "list")[[1]]
rapply(split2, length, how = "list")[1][1]
rapply(split2, length, how = "list")[1][1,]
rapply(split2, length, how = "list")[1]
class(rapply(split2, length, how = "list")[1])
rapply(split2, length, how = "list")[[1]][1]
rapply(split2, length, how = "list")[[2]][1]
as.numeric(rapply(split2, length, how = "list")[[1]][1])
as.numeric(rapply(split2, length, how = "list")[[2]][1])
data.frame(number_of_24_hours, number_of_3_months)
number_of_24_hours<-as.numeric(rapply(split2, length, how = "list")[[1]][1])
number_of_3_months<-as.numeric(rapply(split2, length, how = "list")[[2]][1])
data.frame(number_of_24_hours, number_of_3_months)
hist(reflection_time)
reflection_time<-data.frame(number_of_24_hours, number_of_3_months)
hist(reflection_time)
hist(table(reflection_time))
table(reflection_time)
hist(as.numeric(reflection_time))
reflection_time
row.names(reflection_time)<-c()
reflection_time
rownames(reflection_time)<-c()
reflection_time
VEN1
VEN2
VEN3
sentence_fourcountries2
textdataframe
# Chunk 1: load libraries
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
library(ggplot2)
library(reshape2)
library(lemon)
# Chunk 2: load data
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
# Chunk 3: combining data
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(gender %in% c("m", "f")) %>%
filter(marital %in% c("single", "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period,
months_3 = "3m", hours_24 = "24h"))
# Chunk 4
datatable(hm_data)
# Chunk 5: bag of words
bag_of_words <-  hm_data %>%
unnest_tokens(word, text)
word_count <- bag_of_words %>%
count(word, sort = TRUE)
# Chunk 6: shiny UI
ui <- navbarPage("What makes people happy?",
tabPanel("Overview",
titlePanel(h1("Most Frequent Occurrences",
align = "center")),
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "topWordcloud",
label = "Number of terms for word cloud:",
min = 5,
max = 100,
value = 50)
),
mainPanel(
wordcloud2Output(outputId = "WC")
)
)
)
)
# Chunk 7: shiny server
server <- function(input, output, session) {
output$WC <- renderWordcloud2({
word_count %>%
slice(1:input$topWordcloud) %>%
wordcloud2(size = 0.6,
rotateRatio = 0)
})
}
# Chunk 8
mycountry<-as.data.frame(table(hm_data$country))
mycountryupdated<-mycountry[order(mycountry$Freq, decreasing = T),]
mycountrytop10<-mycountryupdated[1:10,]
colnames(mycountrytop10) <- c("Country", "Count")
Countrylist<-c("USA", "India", "Venezuela", "Canada", "UK", "Philippines", "Vietnam", "Brazil",
"Mexico", "Australia")
cbind(Countrylist,mycountrytop10)
# Chunk 9
table(hm_data$gender)
table(hm_data$marital)
agesub<-na.omit(as.numeric(hm_data$age[which(as.numeric(hm_data$age)<120)]))
hist(agesub, main = 'Histogram of Age', xlab='Age',col="pink")
median(agesub)
mean(agesub)
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
library(ggplot2)
library(reshape2)
library(lemon)
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(gender %in% c("m", "f")) %>%
filter(marital %in% c("single", "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period,
months_3 = "3m", hours_24 = "24h"))
hm_data <- read_csv("../output/processed_moments.csv")
setwd("~/Desktop/GitHub/Fall2018-Proj1-cz2466")
hm_data <- read_csv("../output/processed_moments.csv")
